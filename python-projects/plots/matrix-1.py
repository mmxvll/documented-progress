import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# since 2 vectors are not sufficient to represent a 3d matrix  
# I wanted to see a visualized explanation
# *code generated by ChatGPT

A = np.array([[1, 0], 
              [0, 1], 
              [0, 0]]) 

# Extract the vectors
vec1 = A[:, 0]
vec2 = A[:, 1]

# Create a grid to plot the plane
x = np.linspace(-1, 1, 10)
y = np.linspace(-1, 1, 10)
x, y = np.meshgrid(x, y)
z = np.zeros_like(x)  # Plane lies in the XY plane (z = 0)

# Setup the plot
fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot(111, projection='3d')

# Plot the plane
ax.plot_surface(x, y, z, alpha=0.5, color='lightblue', edgecolor='w', linewidth=0.2)

# Plot the vectors
ax.quiver(0, 0, 0, vec1[0], vec1[1], vec1[2], color='red', label='Vector 1', linewidth=2)
ax.quiver(0, 0, 0, vec2[0], vec2[1], vec2[2], color='green', label='Vector 2', linewidth=2)

# Add a test point outside the plane
test_point = np.array([0, 0, 1])
ax.scatter(test_point[0], test_point[1], test_point[2], color='blue', label='Point outside plane', s=50)

# Set labels
ax.set_xlim([-1, 1])
ax.set_ylim([-1, 1])
ax.set_zlim([-1, 1])
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.legend()
ax.set_title("2-Column Matrix Spanning a Plane in 3D")

plt.show()
